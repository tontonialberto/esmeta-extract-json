diff --git a/spec.html b/spec.html
index 7685cdd7..bfab42c3 100644
--- a/spec.html
+++ b/spec.html
@@ -6993,7 +6993,7 @@
       <h1>
         InitializeInstanceElements (
           _O_: an Object,
-          _constructor_: an ECMAScript function object,
+          _constructor_: an ECMAScript function object or a built-in function object,
         ): either a normal completion containing ~unused~ or a throw completion
       </h1>
       <dl class="header">
@@ -25215,7 +25215,7 @@
               1. Let _result_ be ? OrdinaryCreateFromConstructor(NewTarget, *"%Object.prototype%"*).
             1. Perform ? InitializeInstanceElements(_result_, _F_).
             1. Return _result_.
-          1. Let _F_ be CreateBuiltinFunction(_defaultConstructor_, 0, _className_, ¬´ [[ConstructorKind]], [[SourceText]] ¬ª, the current Realm Record, _constructorParent_).
+          1. Let _F_ be CreateBuiltinFunction(_defaultConstructor_, 0, _className_, ¬´ [[ConstructorKind]], [[SourceText]], [[PrivateMethods]], [[Fields]] ¬ª, the current Realm Record, _constructorParent_).
         1. Else,
           1. Let _constructorInfo_ be ! DefineMethod of _constructor_ with arguments _proto_ and _constructorParent_.
           1. Let _F_ be _constructorInfo_.[[Closure]].
@@ -35631,6 +35631,7 @@ THH:mm:ss.sss
           1. If _numPos_ is *NaN*, let _pos_ be +‚àû; otherwise, let _pos_ be ! ToIntegerOrInfinity(_numPos_).
           1. Let _len_ be the length of _S_.
           1. Let _searchLen_ be the length of _searchStr_.
+          1. If _len_ &lt; _searchLen_, return *-1*<sub>ùîΩ</sub>.
           1. Let _start_ be the result of clamping _pos_ between 0 and _len_ - _searchLen_.
           1. Let _result_ be StringLastIndexOf(_S_, _searchStr_, _start_).
           1. If _result_ is ~not-found~, return *-1*<sub>ùîΩ</sub>.
@@ -44625,7 +44626,7 @@ THH:mm:ss.sss
           1. Else,
             1. Let _n_ be the Element Size value specified in <emu-xref href="#table-the-typedarray-constructors"></emu-xref> for Element Type _type_.
             1. Let _conversionOperation_ be the abstract operation named in the Conversion Operation column in <emu-xref href="#table-the-typedarray-constructors"></emu-xref> for Element Type _type_.
-            1. Let _intValue_ be ‚Ñù(_conversionOperation_(_value_)).
+            1. Let _intValue_ be ‚Ñù(! _conversionOperation_(_value_)).
             1. If _intValue_ ‚â• 0, then
               1. Let _rawBytes_ be a List whose elements are the _n_-byte binary encoding of _intValue_. The bytes are ordered in little endian order.
             1. Else,
